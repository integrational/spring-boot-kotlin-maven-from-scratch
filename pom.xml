<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.0.RELEASE</version>
    </parent>

    <groupId>org.integrational.spring.boot.kotlin</groupId>
    <artifactId>fromscratch</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <properties>
        <skip.ut>false</skip.ut> <!-- skip unit tests -->
        <skip.it>false</skip.it> <!-- skip integration tests -->
        <skip.image>false</skip.image> <!-- skip build container image -->

        <kotlin.code.style>official</kotlin.code.style>

        <!-- container image -->
        <container.repo>integrational</container.repo>

        <!-- versions -->
        <java.version>11</java.version> <!-- override definition in Spring Boot parent POM -->
        <dokka.version>0.10.1</dokka.version>
        <javax.inject.version>1</javax.inject.version>
        <javax.annotation.version>1.3.2</javax.annotation.version>
        <jackson.kotlin.version>2.11.0</jackson.kotlin.version>
        <build.helper.version>3.1.0</build.helper.version>

        <!-- abbreviations -->
        <ojk>org.jetbrains.kotlin</ojk>
        <osb>org.springframework.boot</osb>
        <sbs>spring-boot-starter</sbs>
    </properties>

    <dependencies>
        <!-- kotlin -->
        <dependency>
            <groupId>${ojk}</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
        </dependency>
        <dependency>
            <!-- Kotlin support for Jackson JSON library -->
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
            <version>${jackson.kotlin.version}</version>
        </dependency>
        <!-- standards -->
        <dependency>
            <!-- JSR 330: @Inject, @Named, @Singleton, Provider, ... -->
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>${javax.inject.version}</version>
        </dependency>
        <dependency>
            <!-- - JSR 250: @PostConstruct, @PreDestroy, @Resource, @ManagedBean, ... -->
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>${javax.annotation.version}</version>
        </dependency>
        <!-- spring -->
        <dependency>
            <groupId>${osb}</groupId>
            <artifactId>${sbs}</artifactId>
        </dependency>
        <dependency>
            <groupId>${osb}</groupId>
            <artifactId>${sbs}-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>${osb}</groupId>
            <artifactId>${sbs}-jersey</artifactId>
        </dependency>
        <dependency>
            <groupId>${osb}</groupId>
            <artifactId>${sbs}-aop</artifactId>
        </dependency>
        <!-- test -->
        <dependency>
            <!-- Kotlin test API on top of JUnit 5 -->
            <groupId>${ojk}</groupId>
            <artifactId>kotlin-test-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${osb}</groupId>
            <artifactId>${sbs}-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <!-- exclude JUnit 4 support -->
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>src/main/kotlin</sourceDirectory>
        <testSourceDirectory>src/test/kotlin</testSourceDirectory>
        <plugins>
            <!-- kotlin -->
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId> <!-- can't use abbreviation here -->
                <artifactId>kotlin-maven-plugin</artifactId>
                <configuration>
                    <args>
                        <arg>-Xjsr305=strict</arg> <!-- enable strict mode for JSR 305 annotations -->
                        <arg>-Xjvm-default=enable</arg> <!-- enable @JvmDefault -->
                    </args>
                    <compilerPlugins>
                        <plugin>spring</plugin>
                        <plugin>jpa</plugin>
                    </compilerPlugins>
                    <pluginOptions>
                        <!-- annotations that identify classes to be opened -->
                        <option>spring:annotation=javax.inject.Named</option>
                    </pluginOptions>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>${ojk}</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>${ojk}</groupId>
                        <artifactId>kotlin-maven-noarg</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.dokka</groupId>
                <artifactId>dokka-maven-plugin</artifactId>
                <version>${dokka.version}</version>
                <executions>
                    <execution>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>dokka</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <jdkVersion>9</jdkVersion> <!-- JDK9 is the latest one for which this works -->
                    <reportUndocumented>false</reportUndocumented>
                </configuration>
            </plugin>
            <!-- helper -->
            <plugin>
                <!-- run integration tests with dedicated profile -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>${skip.ut}</skipTests>
                    <argLine>-Dspring.profiles.active=ut</argLine>
                </configuration>
            </plugin>
            <plugin>
                <!-- run integration tests with dedicated profile -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <skipITs>${skip.it}</skipITs>
                    <argLine>-Dspring.profiles.active=it</argLine>
                </configuration>
            </plugin>
            <!-- spring -->
            <plugin>
                <groupId>org.springframework.boot</groupId> <!-- can't use abbreviation here -->
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <!-- generate build-info for Actuator -->
                        <id>build-info</id>
                        <goals>
                            <goal>build-info</goal>
                        </goals>
                        <configuration>
                            <additionalProperties>
                                <java.target>${maven.compiler.target}</java.target>
                            </additionalProperties>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- build container image in package phase -->
                        <id>build-image</id>
                        <goals>
                            <goal>build-image</goal>
                        </goals>
                        <configuration>
                            <skip>${skip.image}</skip>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <layers>
                        <!-- turn-on layers for easier caching during container image creation -->
                        <enabled>true</enabled>
                    </layers>
                    <image>
                        <!-- customize container image name -->
                        <name>${container.repo}/${project.artifactId}:${project.version}</name>
                    </image>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <pluginRepositories>
        <pluginRepository>
            <!-- needed for Dokka Maven plugin -->
            <id>jcenter</id>
            <name>JCenter</name>
            <url>https://jcenter.bintray.com/</url>
        </pluginRepository>
    </pluginRepositories>
</project>
